Update rsync Sync Script for Bi-Directional Sync
Tell the Replit Agent to modify the sync script as follows:

bash
Copy
Edit
#!/bin/bash

# Ensure we are on the correct branch
git checkout staging

# Fetch the latest changes from static branch
git fetch origin static
git checkout static
git pull origin static

echo "ðŸ”„ Syncing MDX content between staging and static branches..."

# **Step 1: Push new pages from staging â†’ static**
rsync -av --ignore-existing --delete ../static/content/ ./content/

# **Step 2: Pull new edits from static â†’ staging**
rsync -av --ignore-existing ./content/ ../static/content/

# **Commit the updated content back to static**
git add content/
git commit -m "Sync MDX content between staging and static"
git push origin static

# Switch back to staging
git checkout staging

echo "âœ… MDX content sync completed successfully."
âœ… 2. Modify GitHub Actions Workflow to Sync Both Ways
ðŸ“Œ Modify .github/workflows/build.yml in staging to run the bi-directional sync before each build:

yaml
Copy
Edit
name: Deploy Static Site

on:
  push:
    branches:
      - staging  # Runs when `staging` is updated

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: staging

      - name: Install Dependencies
        run: npm install

      - name: Sync MDX Content Bi-Directionally
        run: |
          git fetch origin static
          git checkout static
          git pull origin static
          rsync -av --ignore-existing --delete ../static/content/ ./content/
          rsync -av --ignore-existing ./content/ ../static/content/
          git add content/
          git commit -m "Sync MDX content between staging and static"
          git push origin static
          git checkout staging

      - name: Build Static Site
        run: npm run build

      - name: Push Static Build to Static Branch
        run: |
          git checkout static
          git pull origin static
          git add out/
          git commit -m "Auto-update static site build"
          git push origin static
ðŸ”¥ What This Setup Does
Action	Source	Destination	Purpose
New MDX pages from staging â†’ static	staging/static/content/	static/content/	If you generate MDX files via script, they sync to static.
Edits from static (TinaCMS) â†’ staging	static/content/	staging/static/content/	If TinaCMS edits content, it gets pulled back into staging.
Static site is built (staging â†’ static/out/)	staging	static/out/	Full site build is pushed for deployment.
âœ… Final Steps
âœ” Tell the Replit Agent: "Proceed with setting up the bi-directional rsync sync process."
âœ” Ensure static/content/ contains pages generated by the agent.
âœ” Test: Add pages via script in staging, verify they appear in TinaCMS UI.
âœ” Make an edit in TinaCMS, verify it syncs back to staging.

